<div class="relative @Class">
    <select class="peer w-full py-2 pl-3 bg-transparent border-b-2
               border-gray-500 focus:outline-none
               transition-all duration-300 appearance-none
                @(IsFocused ? "text-primary" : "text-gray-600")"
            @bind="SelectedValue"
            @onfocus="() => IsFocused = true"
            @onblur="() => IsFocused = false"
            >
        <option value="" disabled hidden></option>
        @foreach (var option in Options)
        {
            <option @onselect="() => IsFocused = false" value="@option">@option</option>
        }
    </select>

    <span class="pointer-events-none absolute left-3 text-gray-600 transition-all duration-300
               @(IsFocused || !string.IsNullOrEmpty(SelectedValue) ? "-top-2.75 text-xs" : "top-2 text-base")
                @(IsFocused ? "text-primary" : "")">
        @Placeholder
    </span>

    <div class="absolute bottom-0 left-0 w-full h-[1px]
               border-b-2 border-primary/75 bg-primary/75 scale-x-0 transition-transform duration-300 peer-focus:scale-x-100 origin-center"></div>

    <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
        <svg class="w-4 h-4 text-gray-400 @(IsFocused ? "text-primary" : "")" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
    </div>
</div>

@code {
    [Parameter] public string Placeholder { get; set; } = "";
    [Parameter] public List<string> Options { get; set; } = new();
    [Parameter] public string Class { get; set; } = "";
    private string SelectedValue { get; set; } = "";
    private bool IsFocused { get; set; } = false;
}
