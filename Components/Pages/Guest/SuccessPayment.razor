@page "/payment/success"
@rendermode InteractiveServer
@using Oasis.Components.Layout  
@using Oasis.State
@using System.Drawing;
@using System.Drawing.Drawing2D;
@using System.Drawing.Imaging;
@using System.Drawing.Text;
@using System.Text;
@inject PaymentState payment

<div class="w-full h-screen flex justify-center items-center font-montserrat">
	<div class="w-1/3 h-4/5 border border-gray-300 rounded-2xl shadow-md shadow-gray-500/50 flex flex-col justify-center p-10">
		<div class="w-25 h-25 rounded-full bg-[#0ED899] flex justify-center"><Icon Name="check" Color="white" Size="50px"></Icon></div>
		<p class="text-2xl font-bold">Payment Successful</p>
		<div class="w-full h-[1px] bg-gray-300"></div>
		<p>Total Amount</p>
		<p class="text-[#0040A6] text-4xl font-bold">(amount)</p>
		<div class="w-full flex justify-between px-10">
			<p class="text-gray-400">Room Type:</p>
			<p>(room type)</p>
		</div>
		<div class="w-full flex justify-between px-10">
			<p class="text-gray-400">Room Number:</p>
			<p>@(roomNumber)</p>
		</div>
		<div class="w-full flex justify-between px-10">
			<p class="text-gray-400">Account Name:</p>
			<p>(account name)</p>
		</div>
		<div class="w-full flex justify-between px-10">
			<p class="text-gray-400">Date:</p>
			<p>(date)</p>
		</div>
		<div class="w-full flex justify-between px-10">
			<p class="text-gray-400">Card Number:</p>
			<p>(card number)</p>
		</div>
		<div class="w-full flex justify-between px-10">
			<p class="text-gray-400">Payment Method:</p>
			<p>(method)</p>
		</div>
		<button class="w-full h-12 bg-[#2563EB] text-white rounded-lg cursor-pointer hover:bg-primary transition-colors duration-400">Download Receipt</button>
		<button class="text-gray-500 cursor-pointer font-semibold">Back</button>

	</div>
</div>

@code {
	private string roomPrice { get; set; }
	private string roomNumber {get; set; }
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await payment.LoadPaymentAsync();
			roomPrice = payment.roomPrice;
			roomNumber = payment.roomNumber;
			// roomType = CheckIn.roomType;
			// checkInDate = CheckIn.checkInDate;
			// checkOutDate = CheckIn.checkOutDate;
			// roomTypeObj = await RoomService.getRoomType(roomType);
			// roomPrice = Convert.ToString((roomTypeObj.type_price * (checkOutDate.Value.DayNumber - checkInDate.Value.DayNumber))) + ".00";
			// Console.WriteLine(roomPrice);
			StateHasChanged();
		}
	}


}
