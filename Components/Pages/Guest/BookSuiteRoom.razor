@page "/book/suite"
@rendermode InteractiveServer
@using Oasis.Components.Layout
@using Oasis.Components.ui
@using Oasis.State
@using Oasis.Library
@using Oasis.Data.Object
@inject NavigationManager Navigation
@inject ReviewServices ReviewService
@inject AppState AppState
<div class="w-full min-h-screen overflow-hidden flex flex-col justify-center">
	<div class="absolute top-5 left-5 flex font-montserrat cursor-pointer" @onclick="GoBack">
		@* <img src="/icons/back-arrow.png" alt="Alternate Text" class=" top-5 left-5 h-10 -mr-4 transition-all duration-400 hover:stroke-[3px]" /> *@
		<Icon Name="Arrow_Back" />
		<p class="text-xl -ml-3">Back</p>
	</div>
	<div class="w-full absolute top-15 flex flex-col justify-center text-white text-2xl font-montserrat font-medium z-1">
		<div class="w-full flex flex-row justify-center">
			<div class="w-1/8 flex flex-col justify-center -mr-5">
				<div class="flex flex-row w-full">
					<div class="w-[84px] h-[60px] bg-[#2563EB] rounded-full flex justify-center ml-2">
						<p class="text-4xl">1</p>
					</div>
					<div class="w-full h-[10px] bg-[#2563EB] -ml-5"></div>
				</div>
				<p class="text-gray-400 text-sm font-medium self-start">Select Date</p>
			</div>
			<div class="w-1/8 flex flex-col justify-center">
				<div class="flex flex-row w-full">
					<div class="w-full h-[10px] bg-gray-400 -mr-4.5"></div>
					<div class="w-[80px] h-[60px] bg-gray-400 rounded-full flex justify-center ">
						<p class="text-4xl">2</p>
					</div>
				</div>
				<p class="text-gray-400 text-sm font-medium self-end">Payment</p>
			</div>
		</div>

		<div class="w-2/5 h-[2px] bg-gray-200 mt-3"></div>
	</div>
	<div class=" w-4/5 flex flex-row justify-center  pl-20 z-1">
		<div class="w-[calc(25%+10rem)] h-screen pt-10 flex flex-col justify-center">

			<div class="transition-all duration-500 bg-center rounded-2xl h-1/2 w-full"
				 style="background-image: url('@hoveredImage'); background-size: cover;">
			</div>
			<div class="w-full flex h-40 justify-between -mb-20">
				<div @onmouseover='()=> hoveredImage = "/suite/suite-1.jpg"'
					 style="background-image: url('/suite/suite-1.jpg'); background-size: cover;"
					 class="h-full w-[30%] bg-center rounded-md shadow-md shadow-gray-700/50">
				</div>
				<div @onmouseover='()=> hoveredImage = "/suite/suite-2.jpg"'
					 style="background-image: url('/suite/suite-2.jpg'); background-size: cover;"
					 class="h-full w-[30%] bg-center rounded-md shadow-md shadow-gray-700/50">
				</div>
				<div @onmouseover='()=> hoveredImage = "/suite/suite-3.jpg"'
					 style="background-image: url('/suite/suite-3.jpg'); background-size: cover;"
					 class="h-full w-[30%] bg-center rounded-md shadow-md shadow-gray-700/50">
				</div>
			</div>
		</div>

		<div class="w-1/2 h-screen flex justify-center pt-10 font-montserrat pl-25 overflow-hidden z-1">
			<div class="w-full h-3/5 flex flex-col justify-start">
				<div class="w-full">

					<p class="self-start font-wittgenstein text-5xl font-extrabold underline underline-offset-40" style="text-decoration-thickness:1px">Suite Room&nbsp;&nbsp;</p>
					<p class="self-start mt-12 text-[#0040A6]"><span class=" text-4xl font-bold">₱7,500</span> per night</p>
					<p class="self-start mt-5">Our <b>Suite Room</b> provides a cozy and well-equipped space designed for comfort and convenience.</p>
					<ul class="self-start ml-10 mt-5 list-disc">
						<li class="mb-2">Cozy bed with fresh linens</li>
						<li class="mb-2">Private bathroom with toiletries</li>
						<li class="mb-2">Flat-screen TV and free Wi-Fi</li>
						<li class="mb-2">Air conditioning</li>
					</ul>
				</div>
				<div class="w-full h-1/5 flex">
					<div class="w-2/5 h-full flex">
						<CustomDatePicker Placeholder="Check-In Date" @bind-Value="checkInDate" Class="mx-2" Id="1" MinDate="@DateOnly.FromDateTime(DateTime.Now)" />
						<CustomDatePicker Placeholder="Check-Out Date" @bind-Value="checkOutDate" Class="mx-2" Id="2" MinDate="@(checkInDate != null ? checkInDate.Value.AddDays(1) : @DateOnly.FromDateTime(DateTime.Now).AddDays(1))" />
					</div>
				</div>
				<button @onclick="GoTo" class="self-start bg-primary hover:bg-primary/80 transition-all font-bold duration-300 cursor-pointer px-10 py-4 rounded-[20px] font-montserrat text-white text-lg">Book Now</button>
			</div>
		</div>
	</div>
	@* Review Section *@
	@if (roomTypeReviews.Count > 0)
	{
		<div class="w-full bg-white py-16 px-60 z-1">
			<div class="w-full flex flex-col">
				<h2 class="text-3xl font-bold mb-8">Guest Reviews</h2>



				<div class="grid grid-cols-1 gap-8 pb-20">
					<div class="flex flex-col ml-auto mb-6 relative">
						<div class="inset-0 fixed z-20" style="@(IsSortDropdownOpen ? "opacity: 1;" : "opacity: 0; pointer-events:none;")" @onclick='ToggleSortDropdown'></div>
						<ul class="divide-y divide-gray-300 z-30 absolute mt-13 right-0 bg-[#fafafa] rounded-md shadow-md shadow-black/50 overflow-hidden transition-all duration-200" style="@(IsSortDropdownOpen ? "opacity: 1;" : "opacity: 0; pointer-events:none;")">
							<li @onclick='() => SortByDate(true)' class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 cursor-pointer transition-all duration-200">Newest</li>
							<li @onclick='() => SortByDate(false)' class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 cursor-pointer transition-all duration-200">Oldest</li>
							<li @onclick='() => SortByName(true)' class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 cursor-pointer transition-all duration-200">Name (A-Z)</li>
							<li @onclick='() => SortByName(false)' class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 cursor-pointer transition-all duration-200">Name (Z-A)</li>
							<li @onclick='() => SortByRating(true)' class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 cursor-pointer transition-all duration-200">Rating (High-Low)</li>
							<li @onclick='() => SortByRating(false)' class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 cursor-pointer transition-all duration-200">Rating (Low-High)</li>
						</ul>
						<button @onclick='ToggleSortDropdown' class="cursor-pointer transition-all duration-200 hover:bg-white/20 bg-white shadow-sm shadow-gray-500/50 flex justify-center items-center focus:outline-none border-b-2 border-gray-400 p-2 rounded-md px-6">
							<Icon Name="Sort" Size="30px" /> Sort
						</button>
					</div>

					@foreach (var review in roomTypeReviews)
					{
						<div class="border border-gray-200 rounded-lg p-6 shadow-md w-300">
							<div class="flex justify-between items-start mb-4">
								<div>
									<h3 class="text-lg font-semibold">@review.user_fname @review.user_lname</h3>
									<p class="text-sm text-gray-500">@review.review_date?.ToString("MMMM dd, yyyy")</p>
								</div>
								<div class="flex">
									@for (int i = 1; i <= 5; i++)
									{
										<span class="text-xl @(i <= review.review_rating ? "text-yellow-400" : "text-gray-300")">★</span>
									}
								</div>
							</div>
							<p class="text-gray-700">@review.review_feedback</p>
						</div>
					}
				</div>

			</div>
		</div>
	}
	<div style="clip-path: polygon(0px 1198.8px, 1920px 599.4px, 1920px 1998px);" class="w-full h-full bg-[#2563EB] z-0 absolute top-0"></div>
	<div style="clip-path: polygon(1920px 1198.8px, 0px 599.4px, 0px 1998px);" class="w-full h-full bg-primary z-0 absolute top-0"></div>

</div>

@code {
	private DateOnly? checkInDate;
	private DateOnly? checkOutDate;
	string hoveredImage = "/suite/suite-1.jpg";
	private bool IsSortDropdownOpen = false;
	private List<RoomTypeReview> roomTypeReviews = new List<RoomTypeReview>();

	protected override async Task OnInitializedAsync()
	{
		AppState.ClearBookiing();

		if (AppState.CurrentUser == null)
		{
			Navigation.NavigateTo("/signin");
		}
		if (AppState.CurrentUserType.ToLower() != "guest")
		{
			Navigation.NavigateTo("/dashboard/" + AppState.CurrentUserType.ToLower());
		}
		roomTypeReviews = await ReviewService.GetRoomTypeReviews("suite");

	}
	private void GoBack()
	{
		Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
		Navigation.NavigateTo("javascript:history.back()", true);
	}
	private void ToggleSortDropdown()
	{
		IsSortDropdownOpen = !IsSortDropdownOpen;
	}

	private void SortByDate(bool newestFirst)
	{
		roomTypeReviews = newestFirst
			? roomTypeReviews.OrderByDescending(r => r.review_date).ToList()
			: roomTypeReviews.OrderBy(r => r.review_date).ToList();
		IsSortDropdownOpen = false;
	}

	private void SortByName(bool ascending)
	{
		roomTypeReviews = ascending
			? roomTypeReviews.OrderBy(r => $"{r.user_fname} {r.user_lname}").ToList()
			: roomTypeReviews.OrderByDescending(r => $"{r.user_fname} {r.user_lname}").ToList();
		IsSortDropdownOpen = false;
	}

	private void SortByRating(bool highToLow)
	{
		roomTypeReviews = highToLow
			? roomTypeReviews.OrderByDescending(r => r.review_rating).ToList()
			: roomTypeReviews.OrderBy(r => r.review_rating).ToList();
		IsSortDropdownOpen = false;
	}

	private async Task GoTo()
	{
		if (checkInDate == null || checkOutDate == null)
		{
			Console.WriteLine("null");
			return;
		}
		if (checkInDate < DateOnly.FromDateTime(DateTime.Now))
		{
			Console.WriteLine("past");
			return;
		}
		if (checkInDate > checkOutDate)
		{
			Console.WriteLine("invalid");
			return;
		}
		AppState.SetRoomType("suite");

		AppState.SetCheckInDate(checkInDate, checkOutDate);
		Navigation.NavigateTo("/payment");
	}
}
