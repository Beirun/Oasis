@page "/signup"
@inject GuestServices SignUpService
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Oasis.Library
@using Oasis.Data.Models
@using Oasis.Components.ui
@inject NavigationManager NavigationManager

<div class="h-screen w-screen flex justify-center items-center bg-[url('clouds.png')] bg-cover">
    <div class="h-6/7 w-2/3 bg-[#e8e8e8] flex rounded-lg shadow-md shadow-gray-600/50">
        <div class="rounded-l-md h-full w-1/2 bg-[url('signin-bg.jpg')] bg-cover "></div>
        <div class="h-full w-1/2 flex flex-col items-center justify-center">
            <div class="text-4xl text-primary mb-5 mt-2.5 font-montserrat font-bold">
                SIGN UP
            </div>
            <div class="w-100 flex flex-col gap-7.5 justify-center items-center">
                <div class="w-85 flex justify-between">
                    <CustomInput @bind-Value="newGuest.user_fname" type="text" placeholder="First Name" class="w-[45%]" />
                    <CustomInput @bind-Value="newGuest.user_lname" type="text" placeholder="Last Name" class="w-[45%]" />
                </div>

                <CustomInput @bind-Value="newGuest.user_contactno" type="text" placeholder="Contact Number" class="w-85" />
                <CustomInput @bind-Value="newGuest.user_email" type="text" placeholder="Email" class="w-85" />

                <div class="flex justify-between items-center w-85 mt-2.5">
                    <CustomSelect @bind-Value="@newGuest.user_gender" placeholder="Gender" options="@genders" class="w-[45%]" />
                    <CustomDatePicker @bind-Value="@newGuest.user_dob" placeholder="Date of Birth" class="w-[45%]" Id="1" />
                </div>
                <div class="flex justify-between items-center w-85">
                    <CustomInput @bind-Value="newGuest.user_password" type="password" placeholder="Password" class="w-[45%]" />
                    <CustomInput @bind-Value="confirmPassword" type="password" placeholder="Confirm Password" class="w-[45%]" />
                </div>
            </div>
            <div class="flex flex-col justify-center items-center w-100 my-10 h-10">
                <button @onclick="RegisterGuest" type="button" class="w-85 h-full rounded-md text-white bg-[#0040a6] hover:bg-[#0040a6]/80 transition-colors duration-300 cursor-pointer">Sign Up</button>
            </div>
            <div>
                Already have an account? <NavLink href="signin" class="text-primary transition-colors duration-200 hover:underline hover:text-primary/80 ">Sign In Here!</NavLink>
            </div>
        </div>
    </div>
</div>

@code {
    private List<string> genders = new List<string> { "Male", "Female", "Prefer not to say" };
    private string confirmPassword = "";
    private User newGuest = new User();

    // protected override async Task OnInitializedAsync()
    // {
    //     guests = await context.Guest.ToListAsync();
    // }

    private async Task RegisterGuest()
    {
        if (string.IsNullOrEmpty(newGuest.user_fname) || string.IsNullOrEmpty(newGuest.user_lname) || 
        string.IsNullOrEmpty(newGuest.user_gender) || string.IsNullOrEmpty(newGuest.user_contactno) || 
        string.IsNullOrEmpty(newGuest.user_email) || string.IsNullOrEmpty(newGuest.user_password) || 
        string.IsNullOrEmpty(newGuest.user_dob.ToString()))
        {
            Console.WriteLine("Empty");
            return;
        }
        if(newGuest.user_password != confirmPassword){
            Console.WriteLine("Password Mismatch");
            return;
        }
        bool emailTaken = await SignUpService.checkEmail(newGuest.user_email);
        if(emailTaken){
            Console.WriteLine("Email Taken");

            return;
        }
        bool success = await SignUpService.RegisterGuest(newGuest);
        if(!success){
            Console.WriteLine("Failed");
            return;
        }
        Console.WriteLine(newGuest.user_fname);
        Console.WriteLine(newGuest.user_lname);
        Console.WriteLine(newGuest.user_gender);
        Console.WriteLine(newGuest.user_contactno);
        Console.WriteLine(newGuest.user_email);
        Console.WriteLine(newGuest.user_password);
        Console.WriteLine(newGuest.user_dob.ToString());
        Console.WriteLine("Test");
        newGuest = new User();
        confirmPassword = "";
        NavigationManager.NavigateTo("/signin");
    }
}