@page "/dashboard/admin"
@rendermode InteractiveServer
@using Oasis.Components.ui
@using Oasis.Library
@using Oasis.Components.Layout
@using Oasis.Data.Object
@using Oasis.Data.Models
@using Microsoft.EntityFrameworkCore
@using Oasis.State
@using Oasis.Library
@inject GuestServices guests
@inject PaymentServices payments
@inject RoomServices roomsServices
@inject ReservationServices reservations
@inject NavigationManager NavigationManager
@inject StaffServices staffs
<div class="w-screen min-h-screen flex flex-col justify-start bg-background">
    <Navbar />
    <div class="w-4/5 flex justify-evenly items-stretch font-montserrat">
        <div class="w-4/5 flex flex-col">
            <div class="w-full h-25 flex justify-center">
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full">Total Guests</p>
                            <p class="text-2xl w-full font-bold">@(totalGuests)</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#DBEAFE] flex justify-center w-full rounded">
                                <img src="icons/group.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full">Daily Income</p>
                            <p class="text-2xl w-full font-bold">P@(todaysIncome.ToString("N2"))</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#D1FAE5] flex justify-center w-full rounded">
                                <img src="icons/dollar.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full">Room Occupancy</p>
                            <p class="text-2xl w-full font-bold">@(occupiedRooms.ToString("N2"))%</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#EDE9FE] flex justify-center w-full rounded">
                                <img src="icons/bed.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full ">Reservations</p>
                            <p class="text-2xl w-full font-bold">@(totalReservations)</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#FFEDD5] flex justify-center w-full rounded">
                                <img src="icons/reservation_calendar.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="w-full h-100 bg-white rounded-2xl font-montserrat">
                <div class="w-full p-5 flex flex-col">
                    <p class="text-3xl font-bold w-full">Total Income</p>

                </div>
            </div>
            <div class="w-full h-100 flex">
                <div class="w-1/2 h-full bg-white rounded-2xl flex flex-col p-5">
                    <p class="text-3xl font-bold w-full">Booked Rooms</p>
                    <div class="w-full flex-grow h-full bg-red-400">

                        <PSC.Blazor.Components.Chartjs.Chart Config="_config" @ref="_chart"></PSC.Blazor.Components.Chartjs.Chart>
                    </div>

                </div>
                <div class="w-1/2 h-full bg-white rounded-2xl flex flex-col p-5">
                    <p class="text-3xl font-bold w-full">New Guests</p>
                </div>
            </div>
            <div class="w-full bg-white h-60 mb-10 rounded-2xl flex flex-col p-5">
                <p class="text-3xl font-bold w-full">Recent Check-Ins</p>
                <table class="w-full">
                    <tr class="w-full">
                        <td>Guest</td>
                        <td>Room No.</td>
                        <td>Room Type</td>
                        <td>Check In</td>
                        <td>Check Out</td>
                    </tr>
                    @foreach (var checkin in recentCheckIns)
                    {
                        <tr>
                            <td>@(checkin.user_fname) @(checkin.user_lname)</td>
                            <td>@(checkin.room_no)</td>
                            <td>@(checkin.type_category)</td>
                            <td>@(checkin.rsv_checkin)</td>
                            <td>@(checkin.rsv_checkout)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        @* right div >> *@
        <div class="w-2/5 h-full flex flex-col">
            <div class="w-full h-185 bg-white rounded-2xl flex flex-col p-5">
                <p class="text-3xl font-bold w-full">New Members</p>
            </div>
            <div class="w-full h-108 bg-white rounded-2xl flex flex-col p-5">
                <p class="text-3xl font-bold w-full">New Staffs</p>
                @foreach (var staff in recentStaffs)
                {

                    <table class="w-full h-20 flex justify-between border-b border-gray-300">
                        <tr class="w-full flex justify-between">
                            <td class="flex ml-2">
                                <div class="h-10 aspect-square rounded-full bg-[url('/clouds.png')] bg-cover"></div>
                                <p>@(staff.user_fname) @(staff.user_lname)</p>
                            </td>
                            <td class="mr-2">
                                @(staff.position)
                            </td>
                        </tr>
                    </table>
                }
            </div>
        </div>

    </div>
</div>

@code {
    private BarChartConfig _config;
    private PSC.Blazor.Components.Chartjs.Chart _chart;
    private List<Bookings> rooms = new List<Bookings>();
    private List<string> roomTypes = new List<string> { "Standard", "Deluxe", "Suite" };
    private int totalGuests = 0;
    private double todaysIncome = 0;
    private double occupiedRooms = 0;
    private int totalReservations = 0;
    private List<StaffInformation> recentStaffs = new List<StaffInformation>();
    private List<Booking> recentCheckIns = new List<Booking>();

    public void BarChartInitialize()
    {
        _config = new BarChartConfig()
            {
                Options = new Options()
                {
                    Responsive = true, // Ensure chart is responsive
                    MaintainAspectRatio = false, // Don't maintain aspect ratio
                    IndexAxis = "y",
                    Plugins = new Plugins()
                    {
                        Legend = new Legend()
                        {
                            Display = false,
                            Position = LegendPosition.Right
                        }
                    },
                    Scales = new Dictionary<string, Axis>()
        {
            {
                Scales.XAxisId, new Axis()
                {
                    Stacked = true,
                    Ticks = new Ticks()
                    {
                        MaxRotation = 0,
                        MinRotation = 0
                    }
                }
            },
            {
                Scales.YAxisId, new Axis()
                {
                    Stacked = true
                }
            }
        }
                }
            };
        _config.Data.Labels = new List<string>() { "Standard", "Deluxe", "Suite" };
        _config.Data.Datasets.Add(new BarDataset()
            {

                Label = "Value",
                BackgroundColor = new List<string>() { "rgba(0,98,255,1" },
                BorderColor = new List<string>() { "rgba(0,98,255,1" },
            });
    }

    protected override async Task OnInitializedAsync()
    {
        BarChartInitialize();
        List<Booking> allReservations = new List<Booking>();
        allReservations = await reservations.GetReservations();

        totalGuests = (await guests.getGuests()).Count();
        todaysIncome = await payments.GetTodaysIncome();
        occupiedRooms = await roomsServices.GetOccupancyPercentage();
        totalReservations = allReservations.Count();
        recentStaffs = (await staffs.GetStaffs()).OrderByDescending(s => s.staff_id).ToList().GetRange(0,5);
        recentCheckIns = allReservations.Where(rc => rc.rsv_status == "Checked In").ToList();
        Console.WriteLine("recent checkins: ", recentCheckIns);
    }
}
