@page "/dashboard/admin"
@* @rendermode @(new InteractiveServerRenderMode(prerender: false)) *@
@rendermode InteractiveServer
@using Oasis.Components.ui
@using Oasis.Library
@using Oasis.Components.Layout
@using Oasis.Data.Object
@using Oasis.Data.Models
@using Microsoft.EntityFrameworkCore
@using Oasis.State
@using System.Text.Json
@using Oasis.Library
@inject GuestServices guestServices
@inject PaymentServices payments
@inject RoomServices roomsServices
@inject ReservationServices reservations
@inject NavigationManager NavigationManager
@inject StaffServices staffs
<div class="w-screen min-h-screen flex flex-col justify-start bg-background">
    <Navbar />
    <div class="w-4/5 flex justify-evenly items-stretch font-montserrat">
        <div class="w-4/5 flex flex-col">
            <div class="w-full h-25 flex justify-center">
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full">Total Guests</p>
                            <p class="text-2xl w-full font-bold">@(totalGuests)</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#DBEAFE] flex justify-center w-full rounded">
                                <img src="icons/group.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full">Daily Income</p>
                            <p class="text-2xl w-full font-bold">P@(todaysIncome.ToString("N2"))</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#D1FAE5] flex justify-center w-full rounded">
                                <img src="icons/dollar.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full">Room Occupancy</p>
                            <p class="text-2xl w-full font-bold">@(occupiedRooms.ToString("N2"))%</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#EDE9FE] flex justify-center w-full rounded">
                                <img src="icons/bed.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="w-full bg-white h-full rounded-2xl flex justify-evenly">
                    <div class="w-full h-4/5 flex justify-evenly">
                        <div class="w-3/5 h-full ml-5 flex flex-col items-start">
                            <p class="w-full ">Reservations</p>
                            <p class="text-2xl w-full font-bold">@(totalReservations)</p>
                        </div>
                        <div class="w-1/7 h-full mr-3">
                            <div class="bg-[#FFEDD5] flex justify-center w-full rounded">
                                <img src="icons/reservation_calendar.png" alt="..." class="p-1"/>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="w-full h-100 bg-white rounded-2xl font-montserrat">
                <div class="w-full p-5 flex flex-col">
                    <p class="text-3xl font-bold w-full">Total Income</p>

                </div>
                <CustomChart>
                    <div class="w-full absolute -ml-10   -mt-12  overflow-hidden">
                        <Chart Option="@lineOption" Width="1100px" Height="400px" />

                    </div>
                </CustomChart>

            </div>
            <div class="w-full h-100 bg-white rounded-2xl flex flex-col p-5">
                <p class="text-3xl font-bold w-full">Booked Rooms</p>
                <div class="w-full flex-grow h-full ">
                    <CustomChart>
                        <div class="w-full absolute -ml-10   -mt-12  overflow-hidden">
                            <Chart Option="@barOption" Width="1100px" Height="400px" />

                        </div>
                    </CustomChart>
                    @* <PSC.Blazor.Components.Chartjs.Chart Config="_config" @ref="_chart"></PSC.Blazor.Components.Chartjs.Chart> *@
                </div>

            </div>
            <div class="w-full bg-white h-60 mb-10 rounded-2xl flex flex-col p-5">
                <p class="text-3xl font-bold w-full">Recent Check-Ins</p>
                <div class="w-full h-full overflow-y-scroll">

                    <table class="w-full">
                        <tr class="w-full text-sm text-gray-500 bg-gray-200 h-6">
                            <td>Guest</td>
                            <td>Room No.</td>
                            <td>Room Type</td>
                            <td>Check In</td>
                            <td>Check Out</td>
                        </tr>
                        @for (var i=1; i <= 4; i++)
                        {

                            @foreach (var checkin in recentCheckIns)
                            {
                                <tr class="h-7">
                                    <td>@(checkin.user_fname) @(checkin.user_lname)</td>
                                    <td>@(checkin.room_no)</td>
                                    <td>@(checkin.type_category)</td>
                                    <td>@(checkin.rsv_checkin)</td>
                                    <td>@(checkin.rsv_checkout)</td>
                                </tr>
                            }
                        }

                    </table>

                </div>
            </div>
        </div>
        @* right div >> *@
        <div class="w-2/5 h-full flex flex-col">
            <div class="w-full h-185 bg-white rounded-2xl flex flex-col p-5">
                <p class="text-3xl font-bold w-full">New Guests</p>
                <div class="h-full w-full overflow-y-scroll">
                    @* for loop here *@
                    @foreach (var guest in guestList)
                    {
                        <div class="w-full bg-gray-200 flex p-5 rounded-lg mb-2">
                            <div class="h-15 aspect-square rounded-full bg-[url('/clouds.png')] bg-cover"></div>
                            <div class="flex flex-col w-full -space-y-3">
                                <p class="w-full text-xl font-bold">@guest.user_fname @guest.user_lname</p>
                                <p class="w-full">Joined on @guest.registration_date</p>
                            </div>
                        </div>
                    }

                </div>
            </div>
            <div class="w-full h-108 bg-white rounded-2xl flex flex-col p-5">
                <p class="text-3xl font-bold w-full">New Staffs</p>
                @foreach (var staff in recentStaffs)
                {

                    <table class="w-full h-20 flex justify-between border-b border-gray-300">
                        <tr class="w-full flex justify-between">
                            <td class="flex ml-2">
                                <div class="h-10 aspect-square rounded-full bg-[url('/clouds.png')] bg-cover"></div>
                                <p>@(staff.user_fname) @(staff.user_lname)</p>
                            </td>
                            <td class="mr-2">
                                @(staff.position)
                            </td>
                        </tr>
                    </table>
                }
            </div>
        </div>

    </div>
</div>



@code {

    // private BarChartConfig _config;
    // private PSC.Blazor.Components.Chartjs.Chart _chart;
    private List<Bookings> rooms = new List<Bookings>();
    private List<string> roomTypes = new List<string> { "Standard", "Deluxe", "Suite" };
    private int totalGuests = 0;
    private double todaysIncome = 0;
    private double occupiedRooms = 0;
    private int totalReservations = 0;
    private List<StaffInformation> recentStaffs = new List<StaffInformation>();
    private List<Booking> recentCheckIns = new List<Booking>();
    private List<UserGuest> guestList = new List<UserGuest>();
    private string chartColor = "#0062FF";
    private string? lineOption, barOption;

    public void BarChartInitialize()
    {
        var option = new
        {
            tooltip = new
            {
                trigger = "axis",
                axisPointer = new { type = "shadow" }, // Better hover effect
                formatter = "{b}: {c}" // Shows "Month: Value"
            },
            xAxis = new
            {
                type = "value" 
            },
            yAxis = new
            {
                type = "category",
                data = new[] { "Standard", "Deluxe", "Suite"}
            },
            series = new[]
    {
        new
        {
            type = "bar",
            data = new[] { 150, 230, 224},
            itemStyle = new
            {
                color = chartColor, // Red bars
                borderColor = chartColor, // White borders
                borderWidth = 1
            },
            barWidth = "60%", // Adjust bar thickness
            label = new
            {
                show = true,
                position = "right", // Values on the right of bars
                formatter = "{c}"
            }
        }
    }
        };


        barOption = JsonSerializer.Serialize(option);
        Console.WriteLine(barOption);
    }

    public void LineChartInitialize()
    {
        
        var option = new
        {
            tooltip = new
            {
                trigger = "axis",
                formatter = "{c}" // Shows "Month: Value" on hover
            },
            xAxis = new
            {
                type = "category",
                data = new[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }
            },
            yAxis = new
            {
                type = "value"
            },
            series = new[]
    {
        new
        {
            type = "line",
            data = new[] { 150, 230, 224, 218, 135, 147, 260, 200, 180, 190, 210, 220 },
            symbolSize = 12, // Makes dots bigger (default is 4)
            itemStyle = new
            {
                color = chartColor, // Red dots
                borderColor = chartColor, // Optional: White border for contrast
                borderWidth = 5 // Optional: Border thickness
            },
            lineStyle = new
            {
                color = chartColor,
                width = 3 // Thicker line (default is 1)
            },
            // label = new Optional: Display values directly on the dots
            // {
            //     show = true,
            //     position = "top",
            //     formatter = "{c}" Shows the raw value
            // }
        }
    }
        };


        lineOption = JsonSerializer.Serialize(option);
        Console.WriteLine(lineOption);

    }
    protected override async Task OnInitializedAsync()
    {
        List<Booking> allReservations = new List<Booking>();
        

        allReservations = await reservations.GetReservations();
        guestList = await guestServices.getUserGuests();


        totalGuests = guestList.Count();
        todaysIncome = await payments.GetTodaysIncome();
        occupiedRooms = await roomsServices.GetOccupancyPercentage();
        totalReservations = allReservations.Count();
        recentStaffs = (await staffs.GetStaffs()).OrderByDescending(s => s.staff_id).ToList().GetRange(0,5);
        recentCheckIns = allReservations.Where(rc => rc.rsv_status == "Checked In").ToList().GetRange(0, Math.Min(recentCheckIns.Count(),4));
        Console.WriteLine("recent checkins: ", recentCheckIns);
        LineChartInitialize();
        BarChartInitialize();
    }
}
