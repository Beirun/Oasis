@page "/guests"
@rendermode InteractiveServer
@using Oasis.Library;
@using Oasis.Data.Models;
@inject GuestServices GuestService
@using Oasis.State
@inject NavigationManager NavigationManager
@using Oasis.Components.ui
@using System.Text.Json
<div class="w-screen min-h-screen flex flex-col justify-start bg-background">
    <Navbar />
    <div class="w-[75%] flex flex-col justify-between items-center my-4">
        <div class="w-full flex flex-row items-start">
            <div class="font-bold text-gray-800 font-montserrat w-3/8 h-55 bg-white p-5 shadow-xs shadow-gray-500/50 border-b-2 border-gray-400 rounded-2xl">
                <p class="text-2xl w-full">Total Guests</p>
                <p class="w-full text-9xl ml-5 flex flex-col items-start justify-start text-[#2563EB]">
                    <span class="w-full mt-2">@guests.Count</span>
                </p>
            </div>
            <div class="font-bold text-gray-800 font-montserrat w-full h-55 bg-white p-5 shadow-xs shadow-gray-500/50 border-b-2 border-gray-400 rounded-2xl">
                <p class="text-2xl w-full">Registered Guests</p>
                <!-- Chart or statistics can be added here later -->
                <CustomChart>
                    <div class="w-[1200px] absolute -ml-20   -mt-11 ">
                        <Chart Option="@lineOption" Width="1180px" Height="250px" />

                    </div>
                </CustomChart>
            </div>
        </div>
        <div class="w-full flex justify-between">
            <div class="flex">
                <Icon Name="Search" size="30px" Color="gray" Class="absolute ml-4 pointer-events-none focus:outline-none" />
                <input @bind="searchQuery" @oninput="FilterGuests" type="text" name="name" placeholder="Search Guest..."
                class="shadow-xs shadow-gray-500/50 duration-250 bg-white focus:outline-none w-175 pl-12.5 text-lg p-2 px-4 rounded-md border-b-2 border-gray-400 focus:border-gray-500" />

                <div class="flex flex-col ml-10">
                    <div class="inset-0 fixed z-20" style="@(IsSortDropdownOpen ? "opacity: 1;" : "opacity: 0; pointer-events:none;")" @onclick="ToggleSortDropdown">
                    </div>

                    <ul class="divide-y divide-gray-300 z-21 absolute mt-13 bg-[#fafafa] rounded-md shadow-md shadow-black/50 overflow-hidden transition-all duration-200" style="@(IsSortDropdownOpen ? "opacity: 1;" : "opacity: 0; pointer-events:none;")">
                        <li @onclick="() => SortByNameAsc()" class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 px-6 hover:text-gray-100 cursor-pointer transition-all duration-200">Name (A-Z)</li>
                        <li @onclick="() => SortByNameDesc()" class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 px-6 hover:text-gray-100 cursor-pointer transition-all duration-200">Name (Z-A)</li>
                        <li @onclick="() => SortByYoungest()" class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 px-6 hover:text-gray-100 cursor-pointer transition-all duration-200">Youngest First</li>
                        <li @onclick="() => SortByOldest()" class="p-2 px-4 hover:bg-primary/40 hover:text-gray-800 px-6 hover:text-gray-100 cursor-pointer transition-all duration-200">Oldest First</li>
                    </ul>
                    <button @onclick="ToggleSortDropdown" class="cursor-pointer transition-all duration-200 hover:bg-white/20 bg-white shadow-sm shadow-gray-500/50 flex justify-center items-center focus:outline-none border-b-2 border-gray-400 p-2 rounded-md px-6">
                        <Icon Name="Sort" Size="30px" /> Sort
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="w-[75%] h-[1px] bg-[#C0C0C0]"></div>
    <div class="w-[75%] h-[80%] grid grid-cols-4 gap-4">
        @foreach (var guest in filteredGuests)
        {
            <div class="flex flex-col @(!String.IsNullOrEmpty(guest.user_email) ? "justify-between":"") h-90 w-85 bg-white rounded-xl my-4 shadow-gray-500/50 shadow-md">
                <div class="w-full flex p-4 h-20 mt-10">
                    <div class="flex justify-center items-center size-30 w-50 bg-white rounded-full overflow-hidden border-6 border-white shadow-sm shadow-gray-400/80">
                        <img class="size-full" src="@(guest.user_gender == "Male" ? "/male-guest.png" : "/female-guest.png")"
                        alt="Guest Image" />
                    </div>
                    <div class="flex flex-col items-start justify-start h-full w-full">
                        <div class="text-lg font-semibold w-full leading-none">@guest.user_fname @guest.user_lname</div>
                    </div>
                </div>
                @if (String.IsNullOrEmpty(guest.user_email))
                {
                    <div class="w-full flex justify-center pt-10"><h3>Walk In Guest</h3></div>
                }
                else
                {

                    <div class="w-full pl-5">
                        <div class="px-4 pt-8 flex">
                            <img src="icons/mail.png" class="w-5" />
                            <div class="-ml-3 text-sm">
                                @guest.user_email
                            </div>
                        </div>
                        <div class="w-full px-4 pt-3 flex">
                            <img src="icons/phone_black.png" class="w-5" />
                            <div class="-ml-3 text-sm">
                                @guest.user_contactno
                            </div>
                        </div>
                        <div class="w-full px-4 py-3 flex">
                            <img src="icons/calendar.png" class="w-5" />
                            <div class="-ml-3 text-sm">
                                @(guest.user_dob?.ToString("MMMM dd, yyyy") ?? "N/A")
                            </div>
                        </div>
                    </div>
                    <div class="w-full h-[1px] flex justify-center">
                        <div class="w-[90%] h-full bg-[#C0C0C0]"></div>
                    </div>
                    <div class="w-full flex justify-end items-center px-4 mb-5">
                        <button @onclick="() => OpenViewProfileDialog(guest)" class="p-1 text-primary cursor-pointer">View Profile</button>
                    </div>
                }
            </div>
        }
        @* View Profile Dialog Backdrop *@
        <div class="fixed inset-0 z-50 bg-black/60 transition-all duration-200 items-center flex justify-center" style="@(IsViewProfileDialogOpen ? "opacity: 1;" : "opacity: 0; pointer-events:none;")" @onclick="ViewProfileBackdropClick">
            <div @onclick:stopPropagation class="shadow-black/50 flex flex-col fixed  z-55 flex w-1/3 gap-4 border bg-background outline-none focus:outline-none border-gray-300 p-6 shadow-lg transition-all duration-200 rounded-lg" style="@(IsViewProfileDialogOpen ? "opacity: 1; scale: 1;" : "opacity: 0; scale: 0.95;")">

                @* Header *@
                <div class="w-full text-4xl pt-10 font-montserrat font-bold text-gray-800 justify-center items-center flex">
                    GUEST PROFILE
                </div>

                @* Body *@
                <div class="w-120 flex flex-col h-full items-center">
                    <div class="flex justify-center items-center size-30 bg-white rounded-full overflow-hidden border-6 border-white shadow-sm shadow-gray-400/80 mb-6">
                        <img class="size-full" src="@(selectedGuest?.user_gender == "Male" ? "/male-guest.png" : "/female-guest.png")"
                        alt="Guest Image" />
                    </div>

                    <div class="w-105 flex justify-between">
                        <div class="w-[45%]">
                            <label class="text-sm text-gray-500">First Name</label>
                            <div class="p-2 border-b border-gray-300">@selectedGuest?.user_fname</div>
                        </div>
                        <div class="w-[45%]">
                            <label class="text-sm text-gray-500">Last Name</label>
                            <div class="p-2 border-b border-gray-300">@selectedGuest?.user_lname</div>
                        </div>
                    </div>

                    <div class="w-105 mt-5">
                        <label class="text-sm text-gray-500">Email</label>
                        <div class="p-2 border-b border-gray-300">@selectedGuest?.user_email:</div>
                    </div>

                    <div class="w-105 mt-5">
                        <label class="text-sm text-gray-500">Contact Number</label>
                        <div class="p-2 border-b border-gray-300">@selectedGuest?.user_contactno</div>
                    </div>

                    <div class="w-105 flex justify-between mt-5">
                        <div class="w-[45%]">
                            <label class="text-sm text-gray-500">Gender</label>
                            <div class="p-2 border-b border-gray-300">@selectedGuest?.user_gender</div>
                        </div>
                        <div class="w-[45%]">
                            <label class="text-sm text-gray-500">Date of Birth</label>
                            <div class="p-2 border-b border-gray-300">@selectedGuest?.user_dob?.ToString("MMMM dd, yyyy")</div>
                        </div>
                    </div>


                    <button @onclick="CloseViewProfileDialog" class="cursor-pointer p-4 w-105 mt-10 bg-primary text-white text-lg rounded-md hover:bg-primary/80 active:bg-primary/90 active:border-primary hover:border-transparent hover:text-white transition-all duration-200">
                        CLOSE
                    </button>
                    <Icon Name="Close" @onclick="CloseViewProfileDialog" Size="20px" class="absolute top-4 right-4 cursor-pointer" />
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<User> guests = new List<User>();
    private List<User> filteredGuests = new List<User>();
    private string searchQuery = string.Empty;
    private bool IsViewProfileDialogOpen = false;
    private bool IsSortDropdownOpen = false;
    private User? selectedGuest = null;
    private string chartColor = "#0062FF";
    private string? lineOption;
    public void LineChartInitialize(Dictionary<string, int> data)
    {

        var option = new
        {
            tooltip = new
            {
                trigger = "axis",
                formatter = "{b}: {c}" // Shows "Month: Value" on hover
            },
            xAxis = new
            {
                type = "category",
                data = data.Keys.ToArray()
            },
            yAxis = new
            {
                type = "value"
            },
            series = new[]
    {
    new
    {
        type = "line",
        data = data.Values.ToArray(),
        symbolSize = 12, // Makes dots bigger (default is 4)
        itemStyle = new
        {
            color = chartColor, 
            borderColor = chartColor, 
            borderWidth = 5 
        },
        lineStyle = new
        {
            color = chartColor,
            width = 3 // Thicker line (default is 1)
        },
    }
}
        };


        lineOption = JsonSerializer.Serialize(option);
        Console.WriteLine(lineOption);

    }
    protected override async Task OnInitializedAsync()
    {

        guests = await GuestService.getGuests();
        filteredGuests = guests;
        Dictionary<string, int> guestsPerMonth = new Dictionary<string, int>();

        guestsPerMonth = await GuestService.GetMonthlyGuestRegistrations();
        foreach (var month in guestsPerMonth)
        {
            Console.WriteLine($"{month.Key}: {month.Value}");
        }
        LineChartInitialize(guestsPerMonth);
    }

    private void FilterGuests()
    {
        if (string.IsNullOrWhiteSpace(searchQuery))
        {
            filteredGuests = guests;
        }
        else
        {
            var query = searchQuery.ToLower();
            filteredGuests = guests.Where(g =>
                (g.user_fname?.ToLower().Contains(query) ?? false) ||
                (g.user_lname?.ToLower().Contains(query) ?? false) ||
                (g.user_email?.ToLower().Contains(query) ?? false) ||
                (g.user_contactno?.Contains(query) ?? false)
            ).ToList();
        }
    }

    private void ToggleSortDropdown()
    {
        IsSortDropdownOpen = !IsSortDropdownOpen;
    }

    // Sorting methods using available fields
    private void SortByNameAsc()
    {
        filteredGuests = filteredGuests
            .OrderBy(g => g.user_lname)
            .ThenBy(g => g.user_fname)
            .ToList();
        IsSortDropdownOpen = false;
    }

    private void SortByNameDesc()
    {
        filteredGuests = filteredGuests
            .OrderByDescending(g => g.user_lname)
            .ThenByDescending(g => g.user_fname)
            .ToList();
        IsSortDropdownOpen = false;
    }

    private void SortByYoungest()
    {
        filteredGuests = filteredGuests
            .OrderByDescending(g => g.user_dob)
            .ToList();
        IsSortDropdownOpen = false;
    }

    private void SortByOldest()
    {
        filteredGuests = filteredGuests
            .OrderBy(g => g.user_dob)
            .ToList();
        IsSortDropdownOpen = false;
    }

    private void OpenViewProfileDialog(User guest)
    {
        selectedGuest = guest;
        IsViewProfileDialogOpen = true;
    }

    private void CloseViewProfileDialog()
    {
        IsViewProfileDialogOpen = false;
        selectedGuest = null;
    }

    private void ViewProfileBackdropClick()
    {
        CloseViewProfileDialog();
    }
}