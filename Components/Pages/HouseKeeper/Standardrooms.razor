@page "/housekeeper/rooms/standard"
@rendermode InteractiveServer
@using Oasis.Data.Models
@using Oasis.State
@using Oasis.Library
@inject AppState AppState
@inject RoomServices RoomService
@inject HouseKeepingServices HouseKeepingService
<div class="bg-background font-montserrat flex h-screen w-screen flex-col">
    <Navbar />
    <div class="h-full w-3/5 z-1">
        <div class="flex h-15 w-full">
            <NavLink href="/housekeeper/rooms">
                <Icon Name="arrow_back" Size="35px" />
            </NavLink>
            <p class="p-6 text-2xl font-bold">Standard Rooms</p>
        </div>
        <div class="mt-3 flex flex-row">
            <div class="border-0 box-content h-120 w-5/5 rounded-lg bg-white">
                <table class="min-w-full table-auto">
                    <thead>
                        <tr class="bg-gray-100 text-left text-sm text-gray-600 uppercase">
                            <th class="px-6 py-4">Room No.</th>
                            <th class="px-6 py-4">Floor</th>
                            <th class="px-6 py-4">Status</th>
                            <th class="px-6 py-4">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var room in rooms)
                        {
                            <tr class="border-b">
                                <td class="px-6 py-4 font-medium text-gray-900">@room.room_no</td>
                                <td class="px-6 py-4 text-gray-700">Floor @(room.room_no / 100)</td>
                                <td class="px-6 py-4">
                                    @if (room.room_status == "Needs Cleaning")
                                    {
                                        <span class="rounded-full bg-red-100 px-3 py-1 text-xs font-semibold text-red-600">Uncleaned</span>
                                    }
                                    else if (room.room_status == "Being Cleaned")
                                    {
                                        <span class="rounded-full bg-yellow-100 px-3 py-1 text-xs font-semibold text-yellow-600">Being Cleaned</span>
                                    }
                                    else
                                    {
                                        <span class="rounded-full bg-green-100 px-3 py-1 text-xs font-semibold text-green-600">Clean</span>
                                    }
                                </td>
                                <td class="px-6 py-4">
                                    @if (room.room_status == "Needs Cleaning")
                                    {
                                        <button class="rounded-full bg-blue-500 px-4 py-1 text-sm text-white hover:bg-blue-600 cursor-pointer"
                                        @onclick="() => StartCleaning(room.room_id)">
                                            Start
                                        </button>
                                    }
                                    else if (room.room_status == "Being Cleaned")
                                    {
                                        <button class="rounded-full bg-green-500 px-4 py-1 text-sm text-white hover:bg-green-600"
                                        @onclick="() => MarkAsClean(room.room_id)">
                                            Mark as Clean
                                        </button>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">No action needed</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div style="clip-path: polygon(100% 75%, 100% 100%, 30% 100%)" class="w-full h-full bg-[#2563EB] z-0 fixed top-0"></div>
    <div style="clip-path: polygon(0 75%, 0 100%, 75% 100%)" class="w-full h-full bg-primary z-0 fixed top-0"></div>
</div>

@code {
    private List<Room> rooms = new List<Room>();

    protected override async Task OnInitializedAsync()
    {
        rooms = await RoomService.GetRoomsByType("Standard");
        rooms = rooms.Where(r => r.room_status == "Needs Cleaning" || r.room_status == "Being Cleaned").ToList();
    }

    private async Task StartCleaning(int roomId)
    {
        // Call service to update room status to "Being Cleaned"
        HouseKeeping houseKeeping = new HouseKeeping();
        houseKeeping.room_id = roomId;
        houseKeeping.staff_id = AppState.CurrentUser.user_id;
        houseKeeping.housekeeping_starttime = DateTime.Now;
        await HouseKeepingService.AddHouseKeeping(houseKeeping);
        await RoomService.UpdateRoomStatus(roomId, "Being Cleaned");
        // Refresh the list
        await OnInitializedAsync();
    }

    private async Task MarkAsClean(int roomId)
    {
        await HouseKeepingService.UpdateHouseKeeping(roomId);
        // Refresh the list
        await OnInitializedAsync();
    }
}